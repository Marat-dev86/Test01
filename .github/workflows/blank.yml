name: Windows 10 Tailscale Setup

on:
  workflow_dispatch:
    inputs:
      username:
        description: "Enter the username for the remote user"
        required: true
        default: "runneradmin"
      password:
        description: "Enter the password for the remote user"
        required: true
        default: "@cyb3rking"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    # Step 1: Download & Install Tailscale
    - name: Download Tailscale
      run: Invoke-WebRequest https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe -OutFile tailscale-setup.exe

    - name: Install Tailscale
      run: Start-Process -FilePath "tailscale-setup.exe" -ArgumentList "/quiet" -Wait

    - name: Start Tailscale and Authenticate
      run: |
        & "C:\Program Files\Tailscale\tailscale.exe" up
        Write-Host "âœ… Tailscale authentication started. Please visit the link to authenticate."

    # Step 2: Enable Remote Desktop
    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Write-Host "âœ… Remote Desktop Enabled."

    # Step 3: Create or Update User for RDP Access and Admin Rights
    - name: Create or Update User for RDP Access
      run: |
        $username = "${{ github.event.inputs.username }}"
        $password = "${{ github.event.inputs.password }}"
        
        $user = Get-LocalUser -Name $username -ErrorAction SilentlyContinue
        
        if ($null -eq $user) {
            New-LocalUser -Name $username -Password (ConvertTo-SecureString -AsPlainText $password -Force) -FullName $username -Description "RDP User"
            Write-Host "âœ… User '$username' created successfully."
        } else {
            Set-LocalUser -Name $username -Password (ConvertTo-SecureString -AsPlainText $password -Force)
            Write-Host "âœ… Password updated for user '$username'."
        }

        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
        Write-Host "âœ… User '$username' added to 'Remote Desktop Users'."

        Add-LocalGroupMember -Group "Administrators" -Member $username
        Write-Host "âœ… User '$username' added to 'Administrators'."

    # Step 4: Install VMware Workstation Pro
    - name: Install VMware Workstation Pro
      run: |
        Write-Host "â¬‡ Downloading VMware Workstation Pro..."
        Invoke-WebRequest -Uri "https://archive.org/download/vmware-workstation-pro-17.5.2/VMware-workstation-full-17.5.2-23775571.exe" -OutFile "VMware.exe"
        
        Write-Host "ðŸ›  Installing VMware Workstation Pro..."
        Start-Process -FilePath "VMware.exe" -ArgumentList "/s /v /qn REBOOT=ReallySuppress" -Wait

        Write-Host "âœ… VMware Workstation Pro installed successfully."

    # Step 5: Install Internet Download Manager (IDM)
    - name: Install Internet Download Manager (IDM)
      run: |
        Write-Host "â¬‡ Downloading IDM..."
        Invoke-WebRequest -Uri "https://mirror2.internetdownloadmanager.com/idman642build27.exe?v=lt&filename=idman642build27.exe" -OutFile "IDM.exe"

        Write-Host "ðŸ›  Installing IDM..."
        Start-Process -FilePath "IDM.exe" -ArgumentList "/silent" -Wait

        Write-Host "âœ… IDM installed successfully."

    # Step 6: Verify Tailscale Connection
    - name: Verify Tailscale Connection
      run: |
        & "C:\Program Files\Tailscale\tailscale.exe" status
        Write-Host "âœ… Tailscale connection verified."

    # Step 7: Keep Workflow Running
    - name: Keep Workflow Running
      run: |
        Write-Host "ðŸ›  Keeping the workflow running... Press Ctrl+C to stop."
        while ($true) { Start-Sleep -Seconds 10 }
